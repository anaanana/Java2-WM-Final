#BlueJ class context
comment0.target=Game
comment0.text=\n\ \ Die\ Klasse\ Game\ ist\ f\u00FCr\ Informationen\ zu\ teilnehmenden\ Spielnationen\ der\ \n\ \ Weltmeisterschaft\ verantwortlich.\ Sowohl\ die\ Klasse\ Groups,\ als\ auch\ die\ \n\ \ Klasse\ Game\ beziehen\ sich\ auf\ Methoden\ der\ Klasse\ Nation,\ um\ landesspezi-\n\ \ fische\ Details\ zu\ erhalten.\n\ \n\ \ Folgende\ Methoden\ sind\ in\ der\ Klasse\ Nation\ implementiert\:\n\ \ -\ setInformation(int\ nationGoals,\ int\ nationPoints);\n\ \ -\ getInformation();\n\ \ -\ getInformationArray();\n\ \ \n
comment1.params=
comment1.target=Game()
comment1.text=\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ Spiel\n
comment10.params=
comment10.target=void\ getGames()
comment10.text=\n\ Alle\ Spielpaarungen\ f\u00FCr\ alle\ Gruppen.\n
comment11.params=groupName
comment11.target=void\ getGamesFor1Group(java.lang.String)
comment11.text=\n\ Alle\ Spielpaarungen\ f\u00FCr\ 1\ Gruppe.\n
comment12.params=
comment12.target=void\ getResults()
comment12.text=\n\ Alle\ eingetragenen\ Ergebnisse\ werden\ angezeigt.\n
comment13.params=groupName\ nation1\ nation2\ goals1\ goals2
comment13.target=void\ setResults(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ int)
comment13.text=\n\ Ergebnisse\ f\u00FCr\ ein\ Spiel\ k\u00F6nnen\ gesetzt\ werden.\ \n\ Fehleingaben\ teilweise\ ber\u00FCcksichtigt.\ Leider\ lassen\ sich\ noch\ Spiele\ mehrfach\ eintragen,\n\ d.h.\ konkret\ sie\ werden\ nicht\ \u00FCberschrieben\ sondern\ hinzugef\u00FCgt.\ Ich\ br\u00E4uchte\ daf\u00FCr\ eine\ Suche,\ die\n\ checkt,\ ob\ der\ String\ im\ Array\ die\ Spielkombination\ bereits\ beinhaltet.\ Daf\u00FCr\ h\u00E4tte\ ich,\ mit\ mehr\ Zeit,\n\ die\ split()\ Methode\ verwenden\ k\u00F6nnen.\ \n\ \n
comment2.params=
comment2.target=void\ addGroupsToGame()
comment2.text=\n\ Die\ HashMap\ groups\ wird\ bef\u00FCllt\n
comment3.params=key
comment3.target=boolean\ containsGroup(java.lang.String)
comment3.text=\n\ Es\ wird\ gepr\u00FCft,\ ob\ eine\ Gruppe\ (Key)\ in\ der\ HashMap\ ist\n\ \n
comment4.params=
comment4.target=java.util.ArrayList\ getAllGroups()
comment4.text=\n\ Es\ werden\ alle\ teilnehmenden\ Gruppen\ als\ ArrayList\ ausgegeben.\n\ \n
comment5.params=newGroup
comment5.target=void\ addGroup(java.lang.String)
comment5.text=\n\ Eine\ Gruppe\ wird\ hinzugef\u00FCgt.\n
comment6.params=groupName\ nationName\ nationGoals\ nationPoints
comment6.target=void\ addNationToGroup(java.lang.String,\ java.lang.String,\ int,\ int)
comment6.text=\n\ Eine\ Nation\ wird\ zu\ einer\ Gruppe\ hinzugef\u00FCgt.\n\ Fehleingabe\ ber\u00FCcksichtigt.\n
comment7.params=
comment7.target=void\ getAllNationsKeys()
comment7.text=\n\ Alle\ Nationen\ Keys\ -\ also\ alle\ Nationennamen\ -\ werden\ ausgegeben.\n
comment8.params=
comment8.target=void\ getAllNationsValues()
comment8.text=\n\ Alle\ Nationen\ Values\ -\ also\ alle\ Informationen\ zu\ Nationen\ -\ werden\ ausgegeben.\n
comment9.params=groupName\ nationName
comment9.target=java.lang.String\ getNationDetails(java.lang.String,\ java.lang.String)
comment9.text=\n\ Zu\ einer\ bestimmten\ Nation\ k\u00F6nnen\ Informationen\ abgerufen\ werden.\n\ Fehleingaben\ teilweise\ ber\u00FCcksichtigt.\ Es\ fehlt\ die\ \u00DCberpr\u00FCfung,\ ob\ nationName\ in\ der\ HashMap\n\ eingetragen\ ist.\n
numComments=14
